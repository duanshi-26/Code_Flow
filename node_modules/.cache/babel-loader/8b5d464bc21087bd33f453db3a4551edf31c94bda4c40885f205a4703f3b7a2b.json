{"ast":null,"code":"var _jsxFileName = \"E:\\\\java dsa visualiser\\\\src\\\\components\\\\JavaCodeVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Safe expression evaluation function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst safeEval = (expr, scope) => {\n  // eslint-disable-next-line no-new-func\n  const func = new Function(...Object.keys(scope), `return ${expr}`);\n  return func(...Object.values(scope));\n};\n\n// Improved Java code execution function\nconst executeJavaCode = (code, input = []) => {\n  let globalVariables = {};\n  let output = [];\n  let steps = [];\n  let inputIndex = 0;\n  let functions = {};\n  let callStack = [];\n  const lines = code.split('\\n').map(line => line.trim()).filter(line => line !== '');\n  const addStep = (line, variables, output) => {\n    steps.push({\n      line,\n      variables: {\n        ...variables\n      },\n      output: [...output],\n      callStack: [...callStack]\n    });\n  };\n  const evalExpression = (expr, scope) => {\n    const combinedScope = {\n      ...globalVariables,\n      ...scope\n    };\n    for (const [name, value] of Object.entries(combinedScope)) {\n      expr = expr.replace(new RegExp(`\\\\b${name}\\\\b`, 'g'), JSON.stringify(value));\n    }\n    return safeEval(expr, combinedScope);\n  };\n  const executeFunctionCall = (funcName, args, scope) => {\n    const func = functions[funcName];\n    if (!func) throw new Error(`Function ${funcName} is not defined`);\n    const localScope = {\n      ...scope\n    };\n    func.params.forEach((param, index) => {\n      localScope[param] = evalExpression(args[index], scope);\n    });\n    callStack.push(funcName);\n    const result = executeBlock(func.body, localScope);\n    callStack.pop();\n    return result;\n  };\n  const executeBlock = (block, scope) => {\n    let blockScope = {\n      ...scope\n    };\n    let returnValue;\n    for (let i = 0; i < block.length; i++) {\n      const line = block[i];\n      if (line.startsWith('return')) {\n        returnValue = evalExpression(line.split('return')[1].trim().replace(';', ''), blockScope);\n        break;\n      }\n      executeLine(line, blockScope);\n      if (returnValue !== undefined) break;\n    }\n    return returnValue;\n  };\n  const executeLine = (line, scope) => {\n    if (line.startsWith('//') || /^(public class|public static void main)/.test(line)) {\n      return;\n    }\n    if (/^(int|double|String)\\s+\\w+(\\s*=\\s*.+)?;$/.test(line)) {\n      const [type, rest] = line.split(/\\s+(.+)/);\n      let [name, value] = rest.split('=').map(s => s.trim());\n      name = name.replace(';', '');\n      if (value) {\n        scope[name] = evalExpression(value.replace(';', ''), scope);\n      } else {\n        scope[name] = type === 'String' ? '' : 0;\n      }\n    } else if (/^\\w+\\s*=\\s*.+;$/.test(line)) {\n      const [name, value] = line.split('=').map(s => s.trim());\n      scope[name] = evalExpression(value.replace(';', ''), scope);\n    } else if (/System\\.out\\.print(ln)?/.test(line)) {\n      const content = line.match(/print(ln)?\\((.*)\\)/)[2];\n      output.push(evalExpression(content, scope));\n    } else if (line.startsWith('if')) {\n      const condition = line.match(/if\\s*\\((.*)\\)/)[1];\n      if (evalExpression(condition, scope)) {\n        // Execute the next line if condition is true\n        const nextLineIndex = lines.indexOf(line) + 1;\n        if (nextLineIndex < lines.length) {\n          executeLine(lines[nextLineIndex], scope);\n        }\n      }\n    } else if (/Scanner/.test(line)) {\n      const varName = line.split('=')[0].trim();\n      const inputValue = input[inputIndex++] || '';\n      scope[varName] = inputValue;\n    } else if (/^(\\w+)\\s*\\((.*)\\);?$/.test(line)) {\n      const [, funcName, args] = line.match(/^(\\w+)\\s*\\((.*)\\);?$/);\n      executeFunctionCall(funcName, args.split(',').map(arg => arg.trim()), scope);\n    }\n    addStep(line, {\n      ...globalVariables,\n      ...scope\n    }, output);\n  };\n\n  // First pass: collect function definitions\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (/^(public static )?\\w+\\s+\\w+\\s*\\((.*)\\)\\s*\\{/.test(line)) {\n      const [, returnType, name, params] = line.match(/^(?:public static )?(\\w+)\\s+(\\w+)\\s*\\((.*)\\)\\s*\\{/);\n      const body = [];\n      let braceCount = 1;\n      while (braceCount > 0 && i < lines.length - 1) {\n        i++;\n        if (lines[i].includes('{')) braceCount++;\n        if (lines[i].includes('}')) braceCount--;\n        if (braceCount > 0) body.push(lines[i]);\n      }\n      functions[name] = {\n        returnType,\n        params: params.split(',').map(p => p.trim().split(' ')[1]),\n        body\n      };\n    }\n  }\n\n  // Second pass: execute the code\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (!line.startsWith('public static') && !line.includes('class')) {\n      executeLine(line, globalVariables);\n    }\n  }\n  return steps;\n};\nconst JavaCodeVisualizer = () => {\n  _s();\n  var _steps$currentStep, _steps$currentStep2, _steps$currentStep3;\n  const [code, setCode] = useState('// Enter your Java code here\\npublic class Main {\\n    public static void main(String[] args) {\\n        int x = 5;\\n        int y = 10;\\n        System.out.println(x + y);\\n    }\\n}');\n  const [input, setInput] = useState('');\n  const [steps, setSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [error, setError] = useState(null);\n  const runCode = () => {\n    try {\n      const result = executeJavaCode(code, input.split('\\n'));\n      setSteps(result);\n      setCurrentStep(0);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const stepForward = () => setCurrentStep(prev => Math.min(prev + 1, steps.length - 1));\n  const stepBackward = () => setCurrentStep(prev => Math.max(prev - 1, 0));\n  const reset = () => {\n    setSteps([]);\n    setCurrentStep(0);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem',\n      maxWidth: '64rem',\n      margin: '0 auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginBottom: '1rem'\n      },\n      children: \"Java Code Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: code,\n        onChange: e => setCode(e.target.value),\n        placeholder: \"Enter your Java code here...\",\n        style: {\n          width: '100%',\n          height: '16rem',\n          padding: '0.5rem',\n          border: '1px solid #ccc',\n          borderRadius: '0.25rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Enter input values here (one per line)...\",\n        style: {\n          width: '100%',\n          height: '16rem',\n          padding: '0.5rem',\n          border: '1px solid #ccc',\n          borderRadius: '0.25rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runCode,\n        style: {\n          padding: '0.5rem 1rem',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '0.25rem',\n          cursor: 'pointer'\n        },\n        children: \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stepBackward,\n          disabled: currentStep === 0,\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: '#2196F3',\n            color: 'white',\n            border: 'none',\n            borderRadius: '0.25rem',\n            cursor: 'pointer',\n            marginRight: '0.5rem'\n          },\n          children: \"Step Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stepForward,\n          disabled: currentStep === steps.length - 1,\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: '#2196F3',\n            color: 'white',\n            border: 'none',\n            borderRadius: '0.25rem',\n            cursor: 'pointer',\n            marginRight: '0.5rem'\n          },\n          children: \"Step Forward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: '#f44336',\n            color: 'white',\n            border: 'none',\n            borderRadius: '0.25rem',\n            cursor: 'pointer'\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#FFEBEE',\n        border: '1px solid #FFCDD2',\n        borderRadius: '0.25rem',\n        padding: '1rem',\n        marginBottom: '1rem',\n        color: '#B71C1C'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: '0.25rem',\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '1.25rem',\n            fontWeight: 'bold',\n            marginBottom: '0.5rem'\n          },\n          children: \"Variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            backgroundColor: '#f5f5f5',\n            padding: '0.5rem',\n            borderRadius: '0.25rem'\n          },\n          children: JSON.stringify((_steps$currentStep = steps[currentStep]) === null || _steps$currentStep === void 0 ? void 0 : _steps$currentStep.variables, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: '0.25rem',\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '1.25rem',\n            fontWeight: 'bold',\n            marginBottom: '0.5rem'\n          },\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            backgroundColor: '#f5f5f5',\n            padding: '0.5rem',\n            borderRadius: '0.25rem'\n          },\n          children: (_steps$currentStep2 = steps[currentStep]) === null || _steps$currentStep2 === void 0 ? void 0 : _steps$currentStep2.output.join('\\n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        borderRadius: '0.25rem',\n        padding: '1rem',\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '1.25rem',\n          fontWeight: 'bold',\n          marginBottom: '0.5rem'\n        },\n        children: \"Current Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          backgroundColor: '#f5f5f5',\n          padding: '0.5rem',\n          borderRadius: '0.25rem'\n        },\n        children: (_steps$currentStep3 = steps[currentStep]) === null || _steps$currentStep3 === void 0 ? void 0 : _steps$currentStep3.line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(JavaCodeVisualizer, \"6chr9Wlg59XUDb67PtTTpNvfKRI=\");\n_c = JavaCodeVisualizer;\nexport default JavaCodeVisualizer;\nvar _c;\n$RefreshReg$(_c, \"JavaCodeVisualizer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","safeEval","expr","scope","func","Function","Object","keys","values","executeJavaCode","code","input","globalVariables","output","steps","inputIndex","functions","callStack","lines","split","map","line","trim","filter","addStep","variables","push","evalExpression","combinedScope","name","value","entries","replace","RegExp","JSON","stringify","executeFunctionCall","funcName","args","Error","localScope","params","forEach","param","index","result","executeBlock","body","pop","block","blockScope","returnValue","i","length","startsWith","executeLine","undefined","test","type","rest","s","content","match","condition","nextLineIndex","indexOf","varName","inputValue","arg","returnType","braceCount","includes","p","JavaCodeVisualizer","_s","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","setCode","setInput","setSteps","currentStep","setCurrentStep","error","setError","runCode","err","message","stepForward","prev","Math","min","stepBackward","max","reset","style","padding","maxWidth","margin","fontFamily","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","onChange","e","target","placeholder","width","height","border","borderRadius","justifyContent","onClick","backgroundColor","color","cursor","disabled","marginRight","whiteSpace","join","marginTop","_c","$RefreshReg$"],"sources":["E:/java dsa visualiser/src/components/JavaCodeVisualizer.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Safe expression evaluation function\nconst safeEval = (expr, scope) => {\n  // eslint-disable-next-line no-new-func\n  const func = new Function(...Object.keys(scope), `return ${expr}`);\n  return func(...Object.values(scope));\n};\n\n// Improved Java code execution function\nconst executeJavaCode = (code, input = []) => {\n  let globalVariables = {};\n  let output = [];\n  let steps = [];\n  let inputIndex = 0;\n  let functions = {};\n  let callStack = [];\n\n  const lines = code.split('\\n').map(line => line.trim()).filter(line => line !== '');\n\n  const addStep = (line, variables, output) => {\n    steps.push({ line, variables: { ...variables }, output: [...output], callStack: [...callStack] });\n  };\n\n  const evalExpression = (expr, scope) => {\n    const combinedScope = { ...globalVariables, ...scope };\n    for (const [name, value] of Object.entries(combinedScope)) {\n      expr = expr.replace(new RegExp(`\\\\b${name}\\\\b`, 'g'), JSON.stringify(value));\n    }\n    return safeEval(expr, combinedScope);\n  };\n\n  const executeFunctionCall = (funcName, args, scope) => {\n    const func = functions[funcName];\n    if (!func) throw new Error(`Function ${funcName} is not defined`);\n\n    const localScope = { ...scope };\n    func.params.forEach((param, index) => {\n      localScope[param] = evalExpression(args[index], scope);\n    });\n\n    callStack.push(funcName);\n    const result = executeBlock(func.body, localScope);\n    callStack.pop();\n\n    return result;\n  };\n\n  const executeBlock = (block, scope) => {\n    let blockScope = { ...scope };\n    let returnValue;\n\n    for (let i = 0; i < block.length; i++) {\n      const line = block[i];\n\n      if (line.startsWith('return')) {\n        returnValue = evalExpression(line.split('return')[1].trim().replace(';', ''), blockScope);\n        break;\n      }\n\n      executeLine(line, blockScope);\n\n      if (returnValue !== undefined) break;\n    }\n\n    return returnValue;\n  };\n\n  const executeLine = (line, scope) => {\n    if (line.startsWith('//') || /^(public class|public static void main)/.test(line)) {\n      return;\n    }\n\n    if (/^(int|double|String)\\s+\\w+(\\s*=\\s*.+)?;$/.test(line)) {\n      const [type, rest] = line.split(/\\s+(.+)/);\n      let [name, value] = rest.split('=').map(s => s.trim());\n      name = name.replace(';', '');\n      if (value) {\n        scope[name] = evalExpression(value.replace(';', ''), scope);\n      } else {\n        scope[name] = type === 'String' ? '' : 0;\n      }\n    } else if (/^\\w+\\s*=\\s*.+;$/.test(line)) {\n      const [name, value] = line.split('=').map(s => s.trim());\n      scope[name] = evalExpression(value.replace(';', ''), scope);\n    } else if (/System\\.out\\.print(ln)?/.test(line)) {\n      const content = line.match(/print(ln)?\\((.*)\\)/)[2];\n      output.push(evalExpression(content, scope));\n    } else if (line.startsWith('if')) {\n      const condition = line.match(/if\\s*\\((.*)\\)/)[1];\n      if (evalExpression(condition, scope)) {\n        // Execute the next line if condition is true\n        const nextLineIndex = lines.indexOf(line) + 1;\n        if (nextLineIndex < lines.length) {\n          executeLine(lines[nextLineIndex], scope);\n        }\n      }\n    } else if (/Scanner/.test(line)) {\n      const varName = line.split('=')[0].trim();\n      const inputValue = input[inputIndex++] || '';\n      scope[varName] = inputValue;\n    } else if (/^(\\w+)\\s*\\((.*)\\);?$/.test(line)) {\n      const [, funcName, args] = line.match(/^(\\w+)\\s*\\((.*)\\);?$/);\n      executeFunctionCall(funcName, args.split(',').map(arg => arg.trim()), scope);\n    }\n\n    addStep(line, { ...globalVariables, ...scope }, output);\n  };\n\n  // First pass: collect function definitions\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (/^(public static )?\\w+\\s+\\w+\\s*\\((.*)\\)\\s*\\{/.test(line)) {\n      const [, returnType, name, params] = line.match(/^(?:public static )?(\\w+)\\s+(\\w+)\\s*\\((.*)\\)\\s*\\{/);\n      const body = [];\n      let braceCount = 1;\n      while (braceCount > 0 && i < lines.length - 1) {\n        i++;\n        if (lines[i].includes('{')) braceCount++;\n        if (lines[i].includes('}')) braceCount--;\n        if (braceCount > 0) body.push(lines[i]);\n      }\n      functions[name] = { returnType, params: params.split(',').map(p => p.trim().split(' ')[1]), body };\n    }\n  }\n\n  // Second pass: execute the code\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (!line.startsWith('public static') && !line.includes('class')) {\n      executeLine(line, globalVariables);\n    }\n  }\n\n  return steps;\n};\n\nconst JavaCodeVisualizer = () => {\n  const [code, setCode] = useState('// Enter your Java code here\\npublic class Main {\\n    public static void main(String[] args) {\\n        int x = 5;\\n        int y = 10;\\n        System.out.println(x + y);\\n    }\\n}');\n  const [input, setInput] = useState('');\n  const [steps, setSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [error, setError] = useState(null);\n\n  const runCode = () => {\n    try {\n      const result = executeJavaCode(code, input.split('\\n'));\n      setSteps(result);\n      setCurrentStep(0);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const stepForward = () => setCurrentStep(prev => Math.min(prev + 1, steps.length - 1));\n  const stepBackward = () => setCurrentStep(prev => Math.max(prev - 1, 0));\n  const reset = () => {\n    setSteps([]);\n    setCurrentStep(0);\n    setError(null);\n  };\n\n  return (\n    <div style={{ padding: '1rem', maxWidth: '64rem', margin: '0 auto', fontFamily: 'Arial, sans-serif' }}>\n      <h1 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem' }}>Java Code Visualizer</h1>\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem', marginBottom: '1rem' }}>\n        <textarea\n          value={code}\n          onChange={(e) => setCode(e.target.value)}\n          placeholder=\"Enter your Java code here...\"\n          style={{ width: '100%', height: '16rem', padding: '0.5rem', border: '1px solid #ccc', borderRadius: '0.25rem' }}\n        />\n        <textarea\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter input values here (one per line)...\"\n          style={{ width: '100%', height: '16rem', padding: '0.5rem', border: '1px solid #ccc', borderRadius: '0.25rem' }}\n        />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '1rem' }}>\n        <button onClick={runCode} style={{ padding: '0.5rem 1rem', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '0.25rem', cursor: 'pointer' }}>Run Code</button>\n        <div>\n          <button onClick={stepBackward} disabled={currentStep === 0} style={{ padding: '0.5rem 1rem', backgroundColor: '#2196F3', color: 'white', border: 'none', borderRadius: '0.25rem', cursor: 'pointer', marginRight: '0.5rem' }}>Step Back</button>\n          <button onClick={stepForward} disabled={currentStep === steps.length - 1} style={{ padding: '0.5rem 1rem', backgroundColor: '#2196F3', color: 'white', border: 'none', borderRadius: '0.25rem', cursor: 'pointer', marginRight: '0.5rem' }}>Step Forward</button>\n          <button onClick={reset} style={{ padding: '0.5rem 1rem', backgroundColor: '#f44336', color: 'white', border: 'none', borderRadius: '0.25rem', cursor: 'pointer' }}>Reset</button>\n        </div>\n      </div>\n      {error && (\n        <div style={{ backgroundColor: '#FFEBEE', border: '1px solid #FFCDD2', borderRadius: '0.25rem', padding: '1rem', marginBottom: '1rem', color: '#B71C1C' }}>\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem' }}>\n        <div style={{ border: '1px solid #ccc', borderRadius: '0.25rem', padding: '1rem' }}>\n          <h2 style={{ fontSize: '1.25rem', fontWeight: 'bold', marginBottom: '0.5rem' }}>Variables</h2>\n          <pre style={{ whiteSpace: 'pre-wrap', backgroundColor: '#f5f5f5', padding: '0.5rem', borderRadius: '0.25rem' }}>\n            {JSON.stringify(steps[currentStep]?.variables, null, 2)}\n          </pre>\n        </div>\n        <div style={{ border: '1px solid #ccc', borderRadius: '0.25rem', padding: '1rem' }}>\n          <h2 style={{ fontSize: '1.25rem', fontWeight: 'bold', marginBottom: '0.5rem' }}>Output</h2>\n          <pre style={{ whiteSpace: 'pre-wrap', backgroundColor: '#f5f5f5', padding: '0.5rem', borderRadius: '0.25rem' }}>\n            {steps[currentStep]?.output.join('\\n')}\n          </pre>\n        </div>\n      </div>\n      <div style={{ border: '1px solid #ccc', borderRadius: '0.25rem', padding: '1rem', marginTop: '1rem' }}>\n        <h2 style={{ fontSize: '1.25rem', fontWeight: 'bold', marginBottom: '0.5rem' }}>Current Line</h2>\n        <pre style={{ whiteSpace: 'pre-wrap', backgroundColor: '#f5f5f5', padding: '0.5rem', borderRadius: '0.25rem' }}>\n          {steps[currentStep]?.line}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default JavaCodeVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}